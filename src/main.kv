#:kivy 1.9.1
#:import textinput kivy.uix

<GenericWidget>:
    color: .941, .941, .941

<SquareWidget>:

    size: 5, 5
    #a: self.show_area('b')

    canvas:
        Color:
            rgb: self.color
        Rectangle:
            pos: self.pos
            size: self.size
        Color:
            rgb: 0, 0, 0
        Line:
            width: 1.1
            rectangle: self.x, self.y, self.size[0], self.size[1]


<EllipseWidget>:

    # default_size_x: 420
    # default_size_y: 300
    # inc_x: 120
    # inc_y: 100
    #a: self.show_area('r')

    # Kivy bug: Crashes if one of the size values is odd
    size: 4, 4
    dx: self.size[0]
    dy: self.size[1]
    center: self.x + self.size[0]/2, self.y + self.size[1]/2

    # a1: self.x, self.y + self.dy/2
    # a2: self.x + self.dx, self.y + self.dy/2
    # b1: self.x + self.dx/2, self.y
    # b2: self.x + self.dx/2, self.y + self.dy

    canvas:
        Color:
            rgb: self.color
        Ellipse:
            pos: self.pos
            size: self.size
        Color:
            rgb: 0, 0, 0
        #Line:
        SmoothLine:
            width: 1.4 #2
            #rectangle: self.x, self.y, self.size[0], self.size[1]
            ellipse: self.x, self.y, self.dx, self.dy


<AtomWidget>:

    init_text: 'Atom'
    size: 60, 30
    TextWidget:
        pos: self.parent.pos
        size: self.parent.size
        text: self.parent.init_text
        padding: 0, 0, 0, 0


<TextWidget>:

    background_normal: './textinput.png'
    background_color: .941, .941, .941, 1
    size: 60, 34
    multiline: False
    write_tab: False
    font_name: '../fonts/texgyreschola-italic.otf'
    font_size: min(self.size[1]/1.5, 500)


<RootWidget>:

    color: .941, .941, .941
    size: self.parent.size if (self.parent) else (1, 1)
    #size_hint: 1, 1
    canvas.before:
        Color:
            rgb: self.color
        Rectangle:
            pos: self.pos
            size: self.size


<LoadDialog>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            path: './'
            id: filechooser

        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.cancel()

            Button:
                text: "Load"
                on_release: root.load(filechooser.path, filechooser.selection)

<SaveDialog>:
    text_input: text_input
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            path: './'
            id: filechooser
            on_selection: text_input.text = self.selection and self.selection[0] or ''

        TextInput:
            id: text_input
            size_hint_y: None
            height: 30
            multiline: False

        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.cancel()

            Button:
                text: "Save"
                on_release: root.save(filechooser.path, text_input.text)

<MenuButton>:
    size_hint_x: None if not root.inside_group else 1
    width: self.texture_size[0] + 64
    text_size: (self.width-62, self.height-12)
    halign: 'left'
    Image:
        allow_stretch: True
        opacity: 1 if root.icon else 0
        source: root.icon
        pos: root.x + 4, root.y + 4
        size: root.width - 8, root.height - 8

<MenuSubmenu>:
    size_hint_x: None
    width: self.texture_size[0] + 64

<MenuButton,MenuSubmenu>:
    background_normal: ""
    background_down: ""
    background_color: self.background_color_down if self.state=='down' else self.background_color_normal
    color: self.text_color_hovered if self.hovered else self.text_color_unhovered

<MenuDropDown>:
    auto_width: False
    width: 190

<MenuEmptySpace>:
    size_hint_x: 1

<MenuItem>:
    background_color: self.background_color_normal
    canvas.before:
        Color:
            rgba: self.background_color
        Rectangle:
            pos: self.pos
            size: self.size
    canvas.after:
        Color:
            rgba: self.separator_color
        Line:
            rectangle: self.x, self.y, self.width, self.height

<MenuBar>:
    size_hint_y: None
    height: 48
    canvas.before:
        Color:
            rgba: self.background_color
        Rectangle:
            pos: self.pos
            size: self.size
    canvas.after:
        Color:
            rgba: self.separator_color
        Line:
            rectangle: self.x, self.y, self.width, self.height

GlobalContainer:
    orientation: 'vertical'

    MenuBar:
        height: 30

        MenuSubmenu:
            text: "File"
            MenuButton:
                text: "New"
                #on_release: app.button(21)
            MenuButton:
                text: "Open"
                on_release: root.show_load()
            MenuButton:
                text: "Save"
                on_release: root.show_save()
            MenuButton:
                text: "Close"
                #on_release: app.button(23)
            MenuButton:
                text: "Export..."
                on_release: root.active_graph.export_to_png('diagram.png')
            MenuButton:
                text: "Quit"
                on_release: app.stop()

        MenuSubmenu:
            text: "Edit"
            MenuButton:
                text: "Undo"
                #on_release: app.button(31)
            MenuButton:
                text: "Redo"
                #on_release: app.button(31)
            MenuButton:
                text: "Insert"
                #on_release: app.button(31)
            MenuButton:
                text: "Literal/Predicate"
                #on_release: app.button(31)
            MenuButton:
                text: "Ellipse"
                #on_release: app.button(31)
            MenuButton:
                text: "Rectangle"
                #on_release: app.button(31)
            MenuButton:
                text: "Sel/Del/Res/Mov"
                #on_release: app.button(31)
            MenuButton:
                text: "Duplicate"
                #on_release: app.button(31)

        MenuSubmenu:
            text: "View"
            MenuButton:
                text: "Zoom"
                #on_release: app.button(31)
            MenuButton:
                text: "Pan"
                #on_release: app.button(31)
            MenuButton:
                text: "Show side panel"
                #on_release: app.button(31)

        MenuSubmenu:
            text: "Solver"
            MenuButton:
                text: "Find stable models"
                on_release: root.gringo_query()

        MenuSubmenu:
            text: "Help"
            MenuButton:
                text: "Quick tutorial"
                #on_release: app.button(31)
            MenuButton:
                text: "More on ExGraphs..."
                #on_release: app.button(31)
            MenuButton:
                text: "More on ASP..."
                #on_release: app.button(31)
            MenuButton:
                text: "More on EqGraphs..."
                #on_release: app.button(31)
            MenuButton:
                text: "Shortcuts"
                #on_release: app.button(31)
            MenuButton:
                text: "About"
                #on_release: app.button(31)

        MenuEmptySpace:

    StencilView:
        size_hint: 1, 1
        RootWidget:
